%Definisco la struttura della rete neurale LSTM: layer da
%inserire e opzioni di allenamento. 

numFeatures = size(XTrain3PSD,1);  % tutte le feaures in input
numResponses = 5; % output = le 5 velocit√†
numHiddenUnits1 = 50;  
layersP = [ ...
    sequenceInputLayer(numFeatures,'Name','Input')
    lstmLayer(numHiddenUnits1,'Name','Hidden')
    dropoutLayer(0.5,'Name','Dropout') 
    fullyConnectedLayer(numResponses)
    softmaxLayer('Name','SoftMax')
    classificationLayer('Name','Output')
    ];

optionsP = trainingOptions('adam', ...
    'MaxEpochs',25,...
    'InitialLearnRate', 0.1, ...
    'GradientThreshold', 1, ...
    'ExecutionEnvironment',"auto",...
    'plots','training-progress', ...
    'ValidationData',{XTest3PSD,YTest3P}, ... %utilizzo come validation set quello di test, per vedere direttamente l'accuracy in test
    'ValidationFrequency',1, ... 
    'Verbose',false);

netP = trainNetwork(XTrain3PSD,YTrain3P,layersP,optionsP); %alleno la rete
% 
%     'LearnRateSchedule','piecewise', ...
%     'LearnRateDropFactor',0.05, ...
%     'LearnRateDropPeriod',10, ...