function output = extractFeatures_Method2(record,fs)
       
    % Frequency upper boundary
    freqThres = 55;     % Hz         

    [pwelX,f_pwelX] = pwelch(record.ax_top,[],[],[],fs);
    [pwelY,f_pwelY] = pwelch(record.ay_top,[],[],[],fs);
    [pwelZ,f_pwelZ] = pwelch(record.az_top,[],[],[],fs);

    [f_fftX,fftX] = onesidedFFT(record.ax_top,fs);
    [f_fftY,fftY] = onesidedFFT(record.ay_top,fs);
    [f_fftZ,fftZ] = onesidedFFT(record.az_top,fs);

%     frf = frequencyresponse(record(:,1:end-1).Variables,fs,freqThres,'abs');
% 
%     frf_R = frequencyresponse(record(:,1:end-1).Variables,fs,freqThres,'real');
% 
%     frf_I = frequencyresponse(record(:,1:end-1).Variables,fs,freqThres,'imag');

%     output = [ ...
%           ...
%           mean(pwelX(f_pwelX < freqThres)) ...
%           mean(pwelY(f_pwelY < freqThres)) ...
%           mean(pwelZ(f_pwelZ < freqThres)) ...
%           ...
%           rms(pwelX(f_pwelX < freqThres)) ...
%           rms(pwelY(f_pwelY < freqThres)) ...
%           rms(pwelZ(f_pwelZ < freqThres)) ...
%           ...
%           std(pwelX(f_pwelX < freqThres)) ...
%           std(pwelY(f_pwelY < freqThres)) ...
%           std(pwelZ(f_pwelZ < freqThres)) ...
%           ...
%           mean(fftX(f_fftX < freqThres)) ...
%           mean(fftY(f_fftY < freqThres)) ...
%           mean(fftZ(f_fftZ < freqThres)) ...
%           ...
%           mean(frf) ...
%           ...
%           mean(frf_I) ...
%           ...
%           mean(frf_R) ...
%           ...
%           max(record.ax_top) ...
%           max(record.ay_top) ...
%           max(record.az_top) ...
%           ...
%           std(record.ax_top) ...
%           std(record.ay_top) ...
%           std(record.az_top) ...
%           ];

    output = [ ...
          ...
          mean(pwelX(f_pwelX < freqThres)) ...
          mean(pwelY(f_pwelY < freqThres)) ...
          mean(pwelZ(f_pwelZ < freqThres)) ...
          ...
          rms(pwelX(f_pwelX < freqThres)) ...
          rms(pwelY(f_pwelY < freqThres)) ...
          rms(pwelZ(f_pwelZ < freqThres)) ...
          ...
          std(pwelX(f_pwelX < freqThres)) ...
          std(pwelY(f_pwelY < freqThres)) ...
          std(pwelZ(f_pwelZ < freqThres)) ...
          ...
          mean(fftX(f_fftX < freqThres)) ...
          mean(fftY(f_fftY < freqThres)) ...
          mean(fftZ(f_fftZ < freqThres)) ...
          ...
          std(record.ax_top) ...
          std(record.ay_top) ...
          std(record.az_top) ...
          ];
      
    output = array2table(output);
%     output.Properties.VariableNames = {'meanPsd_ax','meanPd_ay','meanPsd_az', ...
%                                        'rmsPsd_ax','rmsPd_ay','rmsPsd_az', ...
%                                        'stdPsd_ax','stdPsd_ay','stdPsd_az', ...
%                                        'meanFft_ax','meanFft_ay','meanFft_az', ...
%                                        'meanFrf_ax','meanFrf_ay','meanFrf_az', ...
%                                        'meanFrf_I_ax','meanFrf_I_ay','meanFrf_I_az', ...
%                                        'meanFrf_R_ax','meanFrf_R_ay','meanFrf_R_az', ...
%                                        'max_ax_top','max_ay_top','max_az_top', ...
%                                        'std_ax_top','std_ay_top','std_az_top' ...
%                                        };
    
    output.Properties.VariableNames = {'meanPsd_ax','meanPd_ay','meanPsd_az', ...
                                       'rmsPsd_ax','rmsPd_ay','rmsPsd_az', ...
                                       'stdPsd_ax','stdPsd_ay','stdPsd_az', ...
                                       'meanFft_ax','meanFft_ay','meanFft_az', ...
                                       'std_ax_top','std_ay_top','std_az_top' ...
                                       };

    % Add labels column
    t = repmat(record.label(1),size(output,1),1);
    output = [output array2table(t)];
    output.Properties.VariableNames{end} = 'velocity';
    
end